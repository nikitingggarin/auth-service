package email

import (
	"os"
	"path/filepath"
	"testing"

	"github.com/joho/godotenv"
)

func TestSendWelcomeEmail(t *testing.T) {
	// –ó–∞–≥—Ä—É–∂–∞–µ–º .env –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞
	envPath := filepath.Join("..", "..", ".env")
	if err := godotenv.Load(envPath); err != nil {
		t.Logf("‚ùå Failed to load .env from %s: %v", envPath, err)
		// –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
		if err := godotenv.Load(); err != nil {
			t.Skip("Skipping test - .env file not found")
		}
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –µ—Å—Ç—å
	if os.Getenv("SMTP_USERNAME") == "" {
		t.Errorf("‚ùå SMTP_USERNAME not set")
		return
	}
	if os.Getenv("SMTP_PASSWORD") == "" {
		t.Errorf("‚ùå SMTP_PASSWORD not set")
		return
	}

	emailService := NewEmailService()

	// –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–±–µ–∑ –ø–∞—Ä–æ–ª—è)
	t.Logf("üîß SMTP settings: %s:%s", os.Getenv("SMTP_HOST"), os.Getenv("SMTP_PORT"))
	t.Logf("üìß From: %s", os.Getenv("FROM_EMAIL"))

	// –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—á—Ç—É –∏–∑ .env (–Ω–∞—à—É –Ø–Ω–¥–µ–∫—Å –ø–æ—á—Ç—É)
	testEmail := os.Getenv("FROM_EMAIL") // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∞–º–æ–º—É —Å–µ–±–µ
	testName := "Test User"

	t.Logf("üß™ Testing email sending to ourselves: %s", testEmail)

	// –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å email
	if err := emailService.SendWelcomeEmail(testEmail, testName); err != nil {
		t.Errorf("‚ùå Failed to send welcome email: %v", err)
	} else {
		t.Logf("‚úÖ Email sent successfully! Check inbox: %s", testEmail)
	}
}
